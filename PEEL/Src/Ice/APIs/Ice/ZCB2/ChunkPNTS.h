///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/**
 *	PNTS chunk for ZB2 format.
 *	\file		ChunkPNTS.h
 *	\author		Pierre Terdiman
 *	\date		September, 11, 2001
 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Include Guard
#ifndef CHUNKPNTS_H
#define CHUNKPNTS_H

	#define PNTS_VERSION	1

	enum ZCB2_PNTS_Flag
	{
		ZCB2_PNTS_DISCARD_LAST	= (1<<0),		//!< true: do not take last component into account (ex for UVW values)
		ZCB2_PNTS_QUANTIZED		= (1<<1),		//!< true: quantize vertex cloud
	};

	class ZCB2_API PNTSChunk : public BaseChunk
	{
		DECLARE_CHUNK(PNTSChunk,		mPNTSCore)

		DECLARE_STD_FLAG(DiscardLast,	ZCB2_PNTS_DISCARD_LAST)
		DECLARE_STD_FLAG(Quantized,		ZCB2_PNTS_QUANTIZED)

		DECLARE_STD_ICE_ARRAY(Pts,		Point)

		inline_	void	SetNbQBits(udword nb)	{ mNbQBits = nb;	}

		private:
				udword	mNbQBits;
	};

#endif // CHUNKPNTS_H

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/**
 *	Contains code for culling hulls (i.e. convex hulls used for culling)
 *	\file		IceCullingHull.h
 *	\author		Pierre Terdiman
 *	\date		January, 29, 2000
 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Include Guard
#ifndef ICECULLINGHULL_H
#define ICECULLINGHULL_H

	class MESHMERIZER_API CullingHull : public CollisionHull
	{
		public:
											CullingHull();
		virtual								~CullingHull();

								bool		IsVisible(udword nb_planes, const Plane* world_planes, const Matrix4x4& world)	const;

		///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		/**
		 *	Computes the number of bytes used by the culling hull.
		 *	\return		number of used bytes
		 */
		///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		override(ConvexHull)	udword		GetUsedRam()	const;

		protected:
		mutable					udword		mSupVerts[6];
	};

#endif	// ICECULLINGHULL_H

